{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/api.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addMovie","isFound","setIsFound","useState","query","setQuery","newMovie","setMovie","findMovie","a","fetch","then","response","json","Response","Title","Plot","Poster","imdbID","onSubmit","event","preventDefault","handleSubmit","htmlFor","type","id","placeholder","value","onChange","target","onClick","App","data","setMovies","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.447302a2.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport movies from '../../api/movies.json';\nimport { getMovie } from '../../api/api';\n\nexport const FindMovie = ({ addMovie, isFound, setIsFound }) => {\n  const [query, setQuery] = useState('');\n  const [newMovie, setMovie] = useState(movies[0]);\n\n  const findMovie = async() => {\n    const movie = await getMovie(query);\n\n    if (movie.Response === 'False') {\n      setIsFound(false);\n\n      return;\n    }\n\n    setMovie({\n      title: movie.Title,\n      description: movie.Plot,\n      imgUrl: movie.Poster,\n      imdbUrl: `https://www.imdb.com/title/${movie.imdbID}`,\n      imdbId: movie.imdbID,\n    });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    addMovie(newMovie);\n    setQuery('');\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={event => handleSubmit(event)}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`input ${isFound || 'is-danger'}`}\n              value={query}\n              onChange={(event) => {\n                setQuery(event.target.value);\n                setIsFound(true);\n              }}\n            />\n          </div>\n\n          {isFound || (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )\n          }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => {\n                findMovie();\n                setMovie(null);\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {newMovie && <MovieCard {...newMovie} />}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n  isFound: PropTypes.bool.isRequired,\n  setIsFound: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=c364c392&t=';\n\nexport function getMovie(title) {\n  return fetch(`${BASE_URL}${title}`)\n    .then(response => response.json());\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport function App() {\n  const [movies, setMovies] = useState(data);\n  const [isFound, setIsFound] = useState(true);\n\n  const addMovie = (newMovie) => {\n    if (isFound) {\n      if (movies.some(movie => movie.imdbId === newMovie.imdbId)) {\n        return;\n      }\n\n      setMovies([...movies, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n          isFound={isFound}\n          setIsFound={setIsFound}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}